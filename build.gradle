plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'br.com.ghwh'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '14'

repositories {
	mavenCentral()
}

dependencies {
	compile 'com.vladmihalcea:hibernate-types-52:2.9.7'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	
	testImplementation 'org.springframework.security:spring-security-test'
	
    testCompile 'org.hamcrest:hamcrest:2.1'
    testCompile 'org.mockito:mockito-core:3.1.0'
	testCompile 'org.apache.commons:commons-lang3:3.10'
}

test {
	useJUnitPlatform()
}

/*
 * O pull da imagem também pode ser incluído(automatizado) no pipeline.
 * As operações com o Docker não foram automatizadas.
 */
task buildDockerImage(type:Exec) {
    workingDir "$projectDir"
    
    commandLine "docker", "build", "--build-arg", "JAR_FILE=build/libs/*.jar", "-t", "diegoarmangecosta/gh-issue-wh:$project.version", "."
}